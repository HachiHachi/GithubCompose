name: CI

# on: [push, pull_request]
on:
  push:
    branches: [  main  ]
    tags:
      - 'v*'
  pull_request:
    branches: [  main  ]
  workflow_dispatch:

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Run sample script
        run: echo Hello, world
        
#  lint:
#    name: Perform lint check
#    needs: [start]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Cache Gradle
#        uses: actions/cache@v2
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle-
#
#      - name: Run lint
#        uses: ./gradlew lintDebug
#        continue-on-error: false
#
#      - name: Upload html test report
#        uses: actions/upload-artifact@v2
#  # with: 它將工件作為指定名稱上傳到路徑
#        with:
#          name: lint.html
#          path: app/build/reports/lint-results-debug.html
          
  # # 執行 Android Instrumentation 測試
  # instrumentation-test:
  #   name: Perform Instrumentation Testing
  #   runs-on: macos-latest # MacOS runs faster
  #   steps:
  #     - name: Checkout the code
  #       uses: actions/checkout@v2
  
  #     # Gradle v8.0.0 requires java JDK v17
  #     - name: Set up Java JDK 17
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: '17'
  
  #     - name: Run espresso tests
  #       uses: reactivecircus/android-emulator-runner@v2 # 3rd party tool
  #       with:
  #         api-level: 29
  #         script: ./gradlew connectedCheck
  
  #     - name: Upload Instrumentation Test report
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: instrumentation_test_report
  #         path: app/build/reports/androidTests/connected        
          
  debug-apk:
      name: Generate Debug APK
#      needs: [lint]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout the code
          uses: actions/checkout@v4

        - name: Set up Java JDK 17
          uses: actions/setup-java@v1
          with:
            java-version: '17'

        - name: Build debug APK
          run: ./gradlew assembleDebug --stacktrace

        - name: Upload APK
          uses: actions/upload-artifact@v4
          with:
            name: sample-app.apk
            path: app/build/outputs/apk/debug/app-debug.apk
      
